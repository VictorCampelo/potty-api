import {MigrationInterface, QueryRunner} from "typeorm";

export class InitVersion1695573630198 implements MigrationInterface {
    name = 'InitVersion1695573630198'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "file" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(255) NOT NULL, "filename" character varying(500) NOT NULL, "alternativeText" character varying(255), "caption" character varying(255), "hash" character varying(255), "ext" character varying(255), "mime" character varying(255), "provider" character varying(255), "url" character varying(255), "previewUrl" character varying(255), "width" integer, "height" integer, "createdBy" integer, "updatedBy" integer, "formats" jsonb, "providerMetadata" jsonb, "tags" text, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "user_id" uuid, "productId" uuid, "storeId" uuid, CONSTRAINT "UQ_40a2f242198176e1a71fcc0ab2f" UNIQUE ("url", "hash", "filename"), CONSTRAINT "PK_36b46d232307066b3a2c9ea3a1d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "order_historic" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "storeId" character varying NOT NULL, "productQtd" integer NOT NULL, "paymentMethod" character varying NOT NULL, "productPrice" double precision NOT NULL, "productParcels" integer, "customerId" character varying NOT NULL, "order_id" uuid NOT NULL, "product_id" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_0c910e1dad50af0c80227bd0723" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "order" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "orderNumber" character varying, "user_id" uuid, "store_id" uuid, "amount" double precision NOT NULL, "status" boolean NOT NULL DEFAULT false, "situation" character varying NOT NULL DEFAULT 'Recebido', "requiresDelivery" boolean DEFAULT false, "customerAddress" character varying, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "couponId" uuid, CONSTRAINT "UQ_4e9f8dd16ec084bca97b3262edb" UNIQUE ("orderNumber"), CONSTRAINT "PK_1031171c13130102495201e3e20" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "plan" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(255) NOT NULL, "nickname" character varying(20) NOT NULL, "url" character varying(255) NOT NULL, "code" integer NOT NULL, "price" integer NOT NULL, "qtd_products" integer, CONSTRAINT "UQ_e405cbb23fb08931a48ad8c2bdb" UNIQUE ("code"), CONSTRAINT "PK_54a2b686aed3b637654bf7ddbb3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "buyerhistory" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "accountStatus" character varying NOT NULL, "paymentMethod" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid, CONSTRAINT "PK_8307c269b954c0aea410e93e488" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "email" character varying(255) NOT NULL, "firstName" character varying(255) NOT NULL, "lastName" character varying(255) NOT NULL, "role" character varying(20) NOT NULL, "enabled" boolean NOT NULL DEFAULT true, "password" character varying NOT NULL, "salt" character varying NOT NULL, "confirmationToken" character varying(64), "confirmationTokenDigits" character varying(6), "recoverToken" character varying(64), "recoverTokenDigits" character varying(6), "hasAcceptedTerms" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "storeId" uuid, "zipcode" character varying, "street" character varying, "addressNumber" integer, "neighborhood" character varying, "complement" character varying, "city" character varying, "uf" character varying, "logradouro" character varying, "plan_id" uuid, "googleId" character varying, "facebookId" character varying, "profileImageId" uuid, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "REL_5c0981de5dc2a2222a1f057485" UNIQUE ("profileImageId"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "feedback" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "orderId" character varying, "star" integer NOT NULL DEFAULT '0', "comment" character varying(255) NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "userId" uuid, "productId" uuid, CONSTRAINT "PK_8389f9e087a57689cd5be8b2b13" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "product" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "title" character varying(255) NOT NULL, "description" character varying(800), "tags" text, "price" double precision NOT NULL DEFAULT '0', "priceWithDiscount" double precision, "discount" double precision, "sumOrders" integer DEFAULT '0', "sumFeedbacks" integer DEFAULT '0', "sumStars" integer DEFAULT '0', "avgStars" double precision DEFAULT '0', "inventory" integer NOT NULL DEFAULT '0', "lastSold" TIMESTAMP WITH TIME ZONE, "parcelAmount" integer DEFAULT '1', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "store_id" uuid, CONSTRAINT "UQ_91b22fa0788f0912b1eceb25df8" UNIQUE ("id", "title"), CONSTRAINT "PK_bebc9158e480b949565b4dc7a82" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payment" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "methodName" character varying NOT NULL, "allowParcels" boolean NOT NULL DEFAULT false, "logoId" uuid, CONSTRAINT "UQ_2d6c2dae4a26ac265602a3ba354" UNIQUE ("methodName"), CONSTRAINT "REL_4d01c7ff68f713e87ffc30673d" UNIQUE ("logoId"), CONSTRAINT "PK_fcaec7df5adf9cac408c686b2ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."store_dispatch_enum" AS ENUM('delivery', 'withdrawal', 'all')`);
        await queryRunner.query(`CREATE TABLE "store" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(45) NOT NULL, "formated_name" character varying(45) NOT NULL, "CNPJ" character varying(45), "phone" character varying(45), "street" character varying, "zipcode" character varying, "addressNumber" integer, "neighborhood" character varying, "city" character varying(45) NOT NULL, "state" character varying(45) NOT NULL, "description" character varying(256), "enabled" boolean NOT NULL DEFAULT true, "sum_orders" integer DEFAULT '0', "sum_feedbacks" integer DEFAULT '0', "sum_stars" integer DEFAULT '0', "avg_stars" double precision DEFAULT '0', "facebook_link" character varying(45), "instagram_link" character varying(45), "whatsapp_link" character varying(45), "schedules" jsonb DEFAULT '{"seg":["06:00","20:00"],"ter":["06:00","20:00"],"qua":["06:00","20:00"],"qui":["06:00","20:00"],"sex":["06:00","20:00"],"sab":["07:00","12:00"],"dom":["07:00","12:00"]}', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "likes" integer NOT NULL DEFAULT '0', "deliveryFee" integer NOT NULL DEFAULT '0', "dispatch" "public"."store_dispatch_enum" NOT NULL DEFAULT 'withdrawal', "avatarId" uuid, "backgroundId" uuid, CONSTRAINT "UQ_66df34da7fb037e24fc7fee642b" UNIQUE ("name"), CONSTRAINT "REL_dfc946eb7f01a7d224392c6f9c" UNIQUE ("avatarId"), CONSTRAINT "REL_53408791d5ec065ca236d68179" UNIQUE ("backgroundId"), CONSTRAINT "PK_f3172007d4de5ae8e7692759d79" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "coupon" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying NOT NULL, "type" character varying, "range" character varying, "discountPorcent" double precision NOT NULL DEFAULT '0', "discountValue" double precision NOT NULL DEFAULT '0', "maxUsage" integer NOT NULL, "isExpired" boolean NOT NULL DEFAULT false, "isPrivate" boolean NOT NULL DEFAULT false, "isLimited" boolean NOT NULL DEFAULT false, "validate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "store_id" uuid, CONSTRAINT "UQ_62d3c5b0ce63a82c48e86d904bc" UNIQUE ("code"), CONSTRAINT "PK_fcbe9d72b60eed35f46dc35a682" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "category" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "enabled" boolean NOT NULL DEFAULT true, "type" character varying(50) NOT NULL DEFAULT 'product', "store_products_id" uuid, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "couponId" uuid, CONSTRAINT "PK_9c4e4a89e3674fc9f382d733f03" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "products_categories" ("productId" uuid NOT NULL, "categoryId" uuid NOT NULL, CONSTRAINT "PK_ac147b513b3ed1671ef3577e098" PRIMARY KEY ("productId", "categoryId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_b7bcf72f50cb6aca555a72eb63" ON "products_categories" ("productId") `);
        await queryRunner.query(`CREATE INDEX "IDX_10e0ebf99c4b77d7d726036d8e" ON "products_categories" ("categoryId") `);
        await queryRunner.query(`CREATE TABLE "store_category" ("storeId" uuid NOT NULL, "categoryId" uuid NOT NULL, CONSTRAINT "PK_c244a2e017abaa20560faa036a5" PRIMARY KEY ("storeId", "categoryId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_7aeb7eedcfe2a6b3d38313a005" ON "store_category" ("storeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_45731ee4ad92c2b356c750a42f" ON "store_category" ("categoryId") `);
        await queryRunner.query(`CREATE TABLE "favorites" ("storeId" uuid NOT NULL, "userId" uuid NOT NULL, CONSTRAINT "PK_3b8b02bf10eecd2f5ae0fae73b2" PRIMARY KEY ("storeId", "userId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_f7bef0415c40592059f0f1fd57" ON "favorites" ("storeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_e747534006c6e3c2f09939da60" ON "favorites" ("userId") `);
        await queryRunner.query(`CREATE TABLE "store_payment" ("storeId" uuid NOT NULL, "paymentId" uuid NOT NULL, CONSTRAINT "PK_2cf8a6397f4d7b820183495896e" PRIMARY KEY ("storeId", "paymentId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_dfb42d32760ad8d5e48277fb90" ON "store_payment" ("storeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_a104224579bb3e73b143e9afea" ON "store_payment" ("paymentId") `);
        await queryRunner.query(`CREATE TABLE "user_coupons_used" ("couponId" uuid NOT NULL, "userId" uuid NOT NULL, CONSTRAINT "PK_14b13d24f2f2bbdb0d667e6db5b" PRIMARY KEY ("couponId", "userId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_9060b8216f77554dcd8a2dd0b0" ON "user_coupons_used" ("couponId") `);
        await queryRunner.query(`CREATE INDEX "IDX_e35fce2b2b35015feae9e4184d" ON "user_coupons_used" ("userId") `);
        await queryRunner.query(`ALTER TABLE "file" ADD CONSTRAINT "FK_516f1cf15166fd07b732b4b6ab0" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file" ADD CONSTRAINT "FK_eae532e4ae79b4fc1ff7d1197ad" FOREIGN KEY ("productId") REFERENCES "product"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file" ADD CONSTRAINT "FK_74f1287fa7c5477647d5305a451" FOREIGN KEY ("storeId") REFERENCES "store"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_historic" ADD CONSTRAINT "FK_688959d870ada71f895756387d5" FOREIGN KEY ("order_id") REFERENCES "order"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_historic" ADD CONSTRAINT "FK_9864588810d1812487d3f89231c" FOREIGN KEY ("product_id") REFERENCES "product"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order" ADD CONSTRAINT "FK_199e32a02ddc0f47cd93181d8fd" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order" ADD CONSTRAINT "FK_8e2b018ed0091fa11714dd7b3e1" FOREIGN KEY ("couponId") REFERENCES "coupon"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order" ADD CONSTRAINT "FK_49bee6b626107c19a15c3cf039e" FOREIGN KEY ("store_id") REFERENCES "store"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "buyerhistory" ADD CONSTRAINT "FK_00cf2b1ca2582b09633eb575bee" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_5c0981de5dc2a2222a1f0574859" FOREIGN KEY ("profileImageId") REFERENCES "file"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_e1352f3eacfce12c2b7bcc5b9f8" FOREIGN KEY ("storeId") REFERENCES "store"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_aa22a94c276c9921fe6590c1557" FOREIGN KEY ("plan_id") REFERENCES "plan"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feedback" ADD CONSTRAINT "FK_4a39e6ac0cecdf18307a365cf3c" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feedback" ADD CONSTRAINT "FK_9712ff88f01fdcbf5af09d5b644" FOREIGN KEY ("productId") REFERENCES "product"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "product" ADD CONSTRAINT "FK_4fb20f5e0d195dcc2e27e8cc815" FOREIGN KEY ("store_id") REFERENCES "store"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_4d01c7ff68f713e87ffc30673df" FOREIGN KEY ("logoId") REFERENCES "file"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store" ADD CONSTRAINT "FK_dfc946eb7f01a7d224392c6f9c0" FOREIGN KEY ("avatarId") REFERENCES "file"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store" ADD CONSTRAINT "FK_53408791d5ec065ca236d681792" FOREIGN KEY ("backgroundId") REFERENCES "file"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "coupon" ADD CONSTRAINT "FK_a6b17d42c728b530202640aa3d7" FOREIGN KEY ("store_id") REFERENCES "store"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "category" ADD CONSTRAINT "FK_28ae0b26f9cabb690840257f581" FOREIGN KEY ("store_products_id") REFERENCES "store"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "category" ADD CONSTRAINT "FK_543f5c48f55856e7329f4db0070" FOREIGN KEY ("couponId") REFERENCES "coupon"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products_categories" ADD CONSTRAINT "FK_b7bcf72f50cb6aca555a72eb630" FOREIGN KEY ("productId") REFERENCES "product"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "products_categories" ADD CONSTRAINT "FK_10e0ebf99c4b77d7d726036d8ec" FOREIGN KEY ("categoryId") REFERENCES "category"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_category" ADD CONSTRAINT "FK_7aeb7eedcfe2a6b3d38313a005d" FOREIGN KEY ("storeId") REFERENCES "store"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "store_category" ADD CONSTRAINT "FK_45731ee4ad92c2b356c750a42f5" FOREIGN KEY ("categoryId") REFERENCES "category"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "favorites" ADD CONSTRAINT "FK_f7bef0415c40592059f0f1fd57b" FOREIGN KEY ("storeId") REFERENCES "store"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "favorites" ADD CONSTRAINT "FK_e747534006c6e3c2f09939da60f" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "store_payment" ADD CONSTRAINT "FK_dfb42d32760ad8d5e48277fb902" FOREIGN KEY ("storeId") REFERENCES "store"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "store_payment" ADD CONSTRAINT "FK_a104224579bb3e73b143e9afea1" FOREIGN KEY ("paymentId") REFERENCES "payment"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_coupons_used" ADD CONSTRAINT "FK_9060b8216f77554dcd8a2dd0b0f" FOREIGN KEY ("couponId") REFERENCES "coupon"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_coupons_used" ADD CONSTRAINT "FK_e35fce2b2b35015feae9e4184d8" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "user_coupons_used" DROP CONSTRAINT "FK_e35fce2b2b35015feae9e4184d8"`);
        await queryRunner.query(`ALTER TABLE "user_coupons_used" DROP CONSTRAINT "FK_9060b8216f77554dcd8a2dd0b0f"`);
        await queryRunner.query(`ALTER TABLE "store_payment" DROP CONSTRAINT "FK_a104224579bb3e73b143e9afea1"`);
        await queryRunner.query(`ALTER TABLE "store_payment" DROP CONSTRAINT "FK_dfb42d32760ad8d5e48277fb902"`);
        await queryRunner.query(`ALTER TABLE "favorites" DROP CONSTRAINT "FK_e747534006c6e3c2f09939da60f"`);
        await queryRunner.query(`ALTER TABLE "favorites" DROP CONSTRAINT "FK_f7bef0415c40592059f0f1fd57b"`);
        await queryRunner.query(`ALTER TABLE "store_category" DROP CONSTRAINT "FK_45731ee4ad92c2b356c750a42f5"`);
        await queryRunner.query(`ALTER TABLE "store_category" DROP CONSTRAINT "FK_7aeb7eedcfe2a6b3d38313a005d"`);
        await queryRunner.query(`ALTER TABLE "products_categories" DROP CONSTRAINT "FK_10e0ebf99c4b77d7d726036d8ec"`);
        await queryRunner.query(`ALTER TABLE "products_categories" DROP CONSTRAINT "FK_b7bcf72f50cb6aca555a72eb630"`);
        await queryRunner.query(`ALTER TABLE "category" DROP CONSTRAINT "FK_543f5c48f55856e7329f4db0070"`);
        await queryRunner.query(`ALTER TABLE "category" DROP CONSTRAINT "FK_28ae0b26f9cabb690840257f581"`);
        await queryRunner.query(`ALTER TABLE "coupon" DROP CONSTRAINT "FK_a6b17d42c728b530202640aa3d7"`);
        await queryRunner.query(`ALTER TABLE "store" DROP CONSTRAINT "FK_53408791d5ec065ca236d681792"`);
        await queryRunner.query(`ALTER TABLE "store" DROP CONSTRAINT "FK_dfc946eb7f01a7d224392c6f9c0"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_4d01c7ff68f713e87ffc30673df"`);
        await queryRunner.query(`ALTER TABLE "product" DROP CONSTRAINT "FK_4fb20f5e0d195dcc2e27e8cc815"`);
        await queryRunner.query(`ALTER TABLE "feedback" DROP CONSTRAINT "FK_9712ff88f01fdcbf5af09d5b644"`);
        await queryRunner.query(`ALTER TABLE "feedback" DROP CONSTRAINT "FK_4a39e6ac0cecdf18307a365cf3c"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_aa22a94c276c9921fe6590c1557"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_e1352f3eacfce12c2b7bcc5b9f8"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_5c0981de5dc2a2222a1f0574859"`);
        await queryRunner.query(`ALTER TABLE "buyerhistory" DROP CONSTRAINT "FK_00cf2b1ca2582b09633eb575bee"`);
        await queryRunner.query(`ALTER TABLE "order" DROP CONSTRAINT "FK_49bee6b626107c19a15c3cf039e"`);
        await queryRunner.query(`ALTER TABLE "order" DROP CONSTRAINT "FK_8e2b018ed0091fa11714dd7b3e1"`);
        await queryRunner.query(`ALTER TABLE "order" DROP CONSTRAINT "FK_199e32a02ddc0f47cd93181d8fd"`);
        await queryRunner.query(`ALTER TABLE "order_historic" DROP CONSTRAINT "FK_9864588810d1812487d3f89231c"`);
        await queryRunner.query(`ALTER TABLE "order_historic" DROP CONSTRAINT "FK_688959d870ada71f895756387d5"`);
        await queryRunner.query(`ALTER TABLE "file" DROP CONSTRAINT "FK_74f1287fa7c5477647d5305a451"`);
        await queryRunner.query(`ALTER TABLE "file" DROP CONSTRAINT "FK_eae532e4ae79b4fc1ff7d1197ad"`);
        await queryRunner.query(`ALTER TABLE "file" DROP CONSTRAINT "FK_516f1cf15166fd07b732b4b6ab0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e35fce2b2b35015feae9e4184d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9060b8216f77554dcd8a2dd0b0"`);
        await queryRunner.query(`DROP TABLE "user_coupons_used"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a104224579bb3e73b143e9afea"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_dfb42d32760ad8d5e48277fb90"`);
        await queryRunner.query(`DROP TABLE "store_payment"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e747534006c6e3c2f09939da60"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f7bef0415c40592059f0f1fd57"`);
        await queryRunner.query(`DROP TABLE "favorites"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_45731ee4ad92c2b356c750a42f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7aeb7eedcfe2a6b3d38313a005"`);
        await queryRunner.query(`DROP TABLE "store_category"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_10e0ebf99c4b77d7d726036d8e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b7bcf72f50cb6aca555a72eb63"`);
        await queryRunner.query(`DROP TABLE "products_categories"`);
        await queryRunner.query(`DROP TABLE "category"`);
        await queryRunner.query(`DROP TABLE "coupon"`);
        await queryRunner.query(`DROP TABLE "store"`);
        await queryRunner.query(`DROP TYPE "public"."store_dispatch_enum"`);
        await queryRunner.query(`DROP TABLE "payment"`);
        await queryRunner.query(`DROP TABLE "product"`);
        await queryRunner.query(`DROP TABLE "feedback"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "buyerhistory"`);
        await queryRunner.query(`DROP TABLE "plan"`);
        await queryRunner.query(`DROP TABLE "order"`);
        await queryRunner.query(`DROP TABLE "order_historic"`);
        await queryRunner.query(`DROP TABLE "file"`);
    }

}
